package view.gui;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import controller.*;
import exceptions.*;
import model.*;

import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.util.List;

/**
 * @author DAVID FT KNOWLES
 */
public class FMR_B_Crear extends javax.swing.JFrame {
    private final Account account;
    private final RoomController roomController;
    
    /**
     * Creates new form FMR_FaQ
     */
    public FMR_B_Crear(Account account) {
        RoomController tempController;
        try {
            tempController = new RoomController(new FileHandler<>(new Room()));
        } catch (RoomException e) {
            JOptionPane.showMessageDialog(null, "Error al inicializar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            tempController = null;
            System.exit(1);
        }
        this.roomController = tempController;
        this.account = account;
        initComponents();
        setLocationRelativeTo(null);

        jTable21.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Solo una fila
        jTable21.setRowSelectionAllowed(true); // Selecci√≥n por fila (no por celdas)
        jTable21.setColumnSelectionAllowed(false);

        loadAvailableRoomsToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG = new javax.swing.JPanel();
        boton_product = new javax.swing.JToggleButton();
        boton_salas = new javax.swing.JToggleButton();
        boton_FaQ = new javax.swing.JToggleButton();
        boton_booking = new javax.swing.JToggleButton();
        Reservar = new javax.swing.JToggleButton();
        boton_volver = new javax.swing.JToggleButton();
        boton_concepto = new javax.swing.JButton();
        TITULO = new javax.swing.JPanel();
        boton_myCuenta = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable21 = new javax.swing.JTable();
        boton_events1 = new javax.swing.JToggleButton();
        boton_cerrarS = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(875, 555));

        BG.setBackground(new java.awt.Color(252, 240, 198));
        BG.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BG.setMinimumSize(new java.awt.Dimension(860, 520));
        BG.setPreferredSize(new java.awt.Dimension(860, 520));
        BG.setRequestFocusEnabled(false);
        BG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boton_product.setBackground(new java.awt.Color(51, 153, 0));
        boton_product.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_product.setForeground(new java.awt.Color(255, 255, 255));
        boton_product.setText("Productos");
        boton_product.setToolTipText("");
        boton_product.setAutoscrolls(true);
        boton_product.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_productActionPerformed(evt);
            }
        });
        BG.add(boton_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 130, 30));

        boton_salas.setBackground(new java.awt.Color(51, 153, 0));
        boton_salas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_salas.setForeground(new java.awt.Color(255, 255, 255));
        boton_salas.setText("Salas");
        boton_salas.setToolTipText("");
        boton_salas.setAutoscrolls(true);
        boton_salas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_salas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_salasActionPerformed(evt);
            }
        });
        BG.add(boton_salas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 130, 30));

        boton_FaQ.setBackground(new java.awt.Color(0, 153, 0));
        boton_FaQ.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_FaQ.setForeground(new java.awt.Color(255, 255, 255));
        boton_FaQ.setText("FaQ");
        boton_FaQ.setToolTipText("");
        boton_FaQ.setAutoscrolls(true);
        boton_FaQ.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_FaQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_FaQActionPerformed(evt);
            }
        });
        BG.add(boton_FaQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 130, 30));

        boton_booking.setBackground(new java.awt.Color(43, 101, 153));
        boton_booking.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_booking.setForeground(new java.awt.Color(255, 255, 255));
        boton_booking.setText("Reservas");
        boton_booking.setToolTipText("");
        boton_booking.setAutoscrolls(true);
        boton_booking.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_booking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_bookingActionPerformed(evt);
            }
        });
        BG.add(boton_booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 130, 30));

        Reservar.setBackground(new java.awt.Color(51, 153, 0));
        Reservar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Reservar.setForeground(new java.awt.Color(255, 255, 255));
        Reservar.setText("Reservar");
        Reservar.setToolTipText("");
        Reservar.setAutoscrolls(true);
        Reservar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Reservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservarActionPerformed(evt);
            }
        });
        BG.add(Reservar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 130, 30));

        boton_volver.setBackground(new java.awt.Color(51, 153, 0));
        boton_volver.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_volver.setForeground(new java.awt.Color(255, 255, 255));
        boton_volver.setText("Volver");
        boton_volver.setToolTipText("");
        boton_volver.setAutoscrolls(true);
        boton_volver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_volverActionPerformed(evt);
            }
        });
        BG.add(boton_volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 130, 30));

        boton_concepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N
        boton_concepto.setBorder(null);
        boton_concepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_conceptoActionPerformed(evt);
            }
        });
        BG.add(boton_concepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        TITULO.setBackground(new java.awt.Color(0, 0, 0));

        boton_myCuenta.setBackground(new java.awt.Color(0, 0, 0));
        boton_myCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/accBla.png"))); // NOI18N
        boton_myCuenta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_myCuenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton_myCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_myCuentaActionPerformed(evt);
            }
        });

        titulo.setBackground(new java.awt.Color(0, 0, 0));
        titulo.setFont(new java.awt.Font("Times New Roman", 1, 60)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Reserva - Salas");
        titulo.setToolTipText("");

        javax.swing.GroupLayout TITULOLayout = new javax.swing.GroupLayout(TITULO);
        TITULO.setLayout(TITULOLayout);
        TITULOLayout.setHorizontalGroup(
            TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TITULOLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boton_myCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TITULOLayout.setVerticalGroup(
            TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TITULOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_myCuenta)
                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        BG.add(TITULO, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 640, 100));

        jTable21.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Habitacion", "Nombre", "Tipo", "Precio/Hora", "Disponible"
            }
        ));
        jScrollPane2.setViewportView(jTable21);

        BG.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 445, 330));

        boton_events1.setBackground(new java.awt.Color(51, 153, 0));
        boton_events1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_events1.setForeground(new java.awt.Color(255, 255, 255));
        boton_events1.setText("Eventos");
        boton_events1.setToolTipText("");
        boton_events1.setAutoscrolls(true);
        boton_events1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_events1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_events1ActionPerformed(evt);
            }
        });
        BG.add(boton_events1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 130, 30));

        boton_cerrarS.setBackground(new java.awt.Color(51, 153, 0));
        boton_cerrarS.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_cerrarS.setForeground(new java.awt.Color(255, 255, 255));
        boton_cerrarS.setText("Cerrar sesion");
        boton_cerrarS.setToolTipText("");
        boton_cerrarS.setAutoscrolls(true);
        boton_cerrarS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_cerrarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cerrarSActionPerformed(evt);
            }
        });
        BG.add(boton_cerrarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 130, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/privado.jpg"))); // NOI18N
        BG.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 640, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_productActionPerformed
        FMR_PRODUCT newFrame = new FMR_PRODUCT(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_productActionPerformed

    private void boton_salasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_salasActionPerformed
        FMR_ROOMS newFrame = new FMR_ROOMS(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_salasActionPerformed

    private void boton_FaQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_FaQActionPerformed
        FMR_FaQ newFrame = new FMR_FaQ(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_FaQActionPerformed

    private void boton_bookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_bookingActionPerformed
        FMR_BOOKING newFrame = new FMR_BOOKING(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_bookingActionPerformed

    private void ReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservarActionPerformed
        //jTable21.clearSelection();
        int selectedRow = jTable21.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, 
                "Por favor, seleccione una habitaci√≥n para reservar", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get room name from selected row and find its ID
        String roomName = jTable21.getValueAt(selectedRow, 0).toString();
        String roomId = "";
        
        try {
            // Find room ID by name
            List<Room> rooms = roomController.getAvailableRooms();
            for (Room room : rooms) {
                if (room.getNombre().equals(roomName)) {
                    roomId = room.getId();
                    break;
                }
            }
            
            if (roomId.isEmpty()) {
                throw new Exception("No se encontr√≥ la habitaci√≥n seleccionada");
            }
            
            // Create dialog for date and hours input
            JPanel panel = new JPanel(new GridLayout(3, 2));
            JSpinner dateSpinner = new JSpinner(new SpinnerDateModel());
            JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(dateSpinner, "dd/MM/yyyy HH:mm");
            dateSpinner.setEditor(dateEditor);
            dateSpinner.setValue(new Date());
            
            JSpinner hourSpinner = new JSpinner(new SpinnerNumberModel(1, 1, 24, 1));
            
            panel.add(new JLabel("Fecha y hora de inicio:"));
            panel.add(dateSpinner);
            panel.add(new JLabel("Horas a reservar:"));
            panel.add(hourSpinner);
            
            int result = JOptionPane.showConfirmDialog(
                this, 
                panel, 
                "Detalles de la reserva", 
                JOptionPane.OK_CANCEL_OPTION, 
                JOptionPane.PLAIN_MESSAGE);
            
            if (result == JOptionPane.OK_OPTION) {
                Date selectedDate = (Date) dateSpinner.getValue();
                LocalDateTime fechaInicio = LocalDateTime.ofInstant(
                    selectedDate.toInstant(), 
                    ZoneId.systemDefault());
                
                int horas = (int) hourSpinner.getValue();
                
                BookingController bookingController = new BookingController(
                    new FileHandler<>(new Booking()),
                    this.roomController);
                
                // Create the booking
                Booking booking = bookingController.createBooking(
                    account.getId(), 
                    roomId, 
                    fechaInicio, 
                    horas);
                
                JOptionPane.showMessageDialog(this, 
                    "Reserva creada exitosamente!\nID: " + booking.getId() + 
                    "\nTotal: $" + booking.getTotal(), 
                    "√âxito", 
                    JOptionPane.INFORMATION_MESSAGE);
                
                // Update table
                loadAvailableRoomsToTable();
                jTable21.clearSelection();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error al crear la reserva: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_ReservarActionPerformed

    private void boton_conceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_conceptoActionPerformed
        FMR_CONCEPTO newFrame = new FMR_CONCEPTO(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_conceptoActionPerformed

    private void boton_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_volverActionPerformed
       FMR_BOOKING newFrame = new FMR_BOOKING(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_volverActionPerformed

    private void boton_myCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_myCuentaActionPerformed
        FMR_MYACC newFrame = new FMR_MYACC(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_myCuentaActionPerformed

    private void boton_events1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_events1ActionPerformed
     FMR_B_Crear newFrame = new FMR_B_Crear(account); 
        newFrame.setVisible(true);
        this.dispose();   
    }//GEN-LAST:event_boton_events1ActionPerformed

    private void boton_cerrarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cerrarSActionPerformed
       FMR_LOGIN newFrame = new FMR_LOGIN();
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_cerrarSActionPerformed

    private void loadAvailableRoomsToTable() {
        try {
            // Create model with columns
            DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", 
                    "Tipo", 
                    "Precio/Hora", 
                    "Disponible"
                }) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            
            jTable21.setModel(model);
            model.setRowCount(0);
    
            // Set up basic table properties
            jTable21.setOpaque(true);
            jTable21.setBackground(Color.WHITE);
            jTable21.setSelectionBackground(new Color(255, 255, 255, 80));
            jTable21.setSelectionForeground(Color.RED);
            
            // Make the scroll pane transparent
            jScrollPane2.setOpaque(false);
            jScrollPane2.getViewport().setOpaque(false);
            jScrollPane2.setBorder(null);
            
            // Set up table header
            JTableHeader header = jTable21.getTableHeader();
            header.setOpaque(false);
            header.setBackground(new Color(0, 0, 0, 80));
            header.setForeground(Color.BLACK);
            ((DefaultTableCellRenderer)header.getDefaultRenderer()).setOpaque(false);
    
            // Load data
            List<Room> availableRooms = roomController.getAvailableRooms();
    
            if (availableRooms.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                    "No hay habitaciones disponibles en este momento",
                    "Informaci√≥n",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }
    
            // Fill table with data
            for (Room room : availableRooms) {
                model.addRow(new Object[]{
                    room.getNombre(),
                    getTipoHabitacion(room.getTipo()),
                    String.format("$%.2f", room.getPrecioPorHora()),
                    room.isDisponible() ? "S√≠" : "No"
                });
            }
    
            // Adjust column widths
            jTable21.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable21.getColumnModel().getColumn(0).setPreferredWidth(150); // Nombre
            jTable21.getColumnModel().getColumn(1).setPreferredWidth(100); // Tipo
            jTable21.getColumnModel().getColumn(2).setPreferredWidth(100); // Precio/Hora
            jTable21.getColumnModel().getColumn(3).setPreferredWidth(80);  // Disponible
            jTable21.setRowHeight(25);
            
            // Create custom renderer for cells
            DefaultTableCellRenderer customRenderer = new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(
                    JTable table, Object value, boolean isSelected, 
                    boolean hasFocus, int row, int column
                ) {
                    Component c = super.getTableCellRendererComponent(
                        table, value, isSelected, hasFocus, row, column
                    );
            
                    // Fondo transparente por defecto
                    c.setBackground(new Color(255, 255, 255, 80)); // Fondo semi-transparente
                    c.setForeground(Color.BLACK);
                    setFont(getFont().deriveFont(Font.PLAIN));
            
                    // Solo aplicar estilo si la fila est√° ACTIVAMENTE seleccionada
                    if (table.getSelectedRow() == row) {
                        //c.setBackground(Color.WHITE); // Fondo blanco s√≥lido
                        c.setForeground(Color.RED);   // Texto rojo
                        setFont(getFont().deriveFont(Font.BOLD));
                    }
            
                    return c;
                }
            };
    
            // Apply renderer to all columns
            for (int i = 0; i < jTable21.getColumnCount(); i++) {
                jTable21.getColumnModel().getColumn(i).setCellRenderer(customRenderer);
            }
            
        } catch (RoomException e) {
            JOptionPane.showMessageDialog(this,
                "Error al cargar las habitaciones: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    // M√©todo auxiliar para convertir tipo de habitaci√≥n (char) a descripci√≥n
    private String getTipoHabitacion(char tipo) {
        switch(tipo) {
            case 'I': return "Individual";
            case 'P': return "Privada";
            case 'D': return "Dormitorio";
            case 'M': return "Mixta";
            default: return "Desconocido";
        }
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMR_B_Crear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FMR_B_Crear(null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG;
    private javax.swing.JToggleButton Reservar;
    private javax.swing.JPanel TITULO;
    private javax.swing.JToggleButton boton_FaQ;
    private javax.swing.JToggleButton boton_booking;
    private javax.swing.JToggleButton boton_cerrarS;
    private javax.swing.JButton boton_concepto;
    private javax.swing.JToggleButton boton_events1;
    private javax.swing.JButton boton_myCuenta;
    private javax.swing.JToggleButton boton_product;
    private javax.swing.JToggleButton boton_salas;
    private javax.swing.JToggleButton boton_volver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable21;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}