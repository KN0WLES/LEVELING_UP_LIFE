package view.gui;

import controller.*;
//import exceptions.*;
import model.*;

import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.util.List;
import java.time.LocalDateTime;
//import java.time.ZoneId;
//import java.util.Date;
//import javax.swing.SpinnerDateModel;
//import javax.swing.SpinnerNumberModel;

/**
 * @author DAVID FT KNOWLES
 */
public class FMR_B_MisR extends javax.swing.JFrame {
    private final Account account;
    private final BookingController bookingController; // Cambiado de RoomController a BookingController
    private final RoomController roomController; // Añadido RoomController

    public FMR_B_MisR(Account account) {
        BookingController tempController;
        RoomController tempRoomController;
        try {
            tempController = new BookingController(new FileHandler<>(new Booking()), new RoomController(new FileHandler<>(new Room())));
            tempRoomController = new RoomController(new FileHandler<>(new Room()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al inicializar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            tempController = null;
            tempRoomController = null;
            System.exit(1);
        }
        this.bookingController = tempController;
        this.roomController = tempRoomController;
        this.account = account;
        Toolkit t=Toolkit.getDefaultToolkit();
        setIconImage(t.getImage(getClass().getResource("/resources/logo.png")));
        setTitle("LEVELING_UP_LIFE");
        setResizable(false);
        initComponents();
        setLocationRelativeTo(null);

        // Configuración de la tabla (igual que en FMR_B_Crear)
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable2.setRowSelectionAllowed(true);
        jTable2.setColumnSelectionAllowed(false);

        loadBookingsToTable(); // Añade esta línea para cargar las reservas al iniciar
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG = new javax.swing.JPanel();
        boton_cancelar = new javax.swing.JToggleButton();
        boton_volver = new javax.swing.JToggleButton();
        TITULO = new javax.swing.JPanel();
        boton_myCuenta = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        boton_product = new javax.swing.JToggleButton();
        boton_salas = new javax.swing.JToggleButton();
        boton_FaQ = new javax.swing.JToggleButton();
        boton_booking = new javax.swing.JToggleButton();
        boton_concepto = new javax.swing.JButton();
        boton_events1 = new javax.swing.JToggleButton();
        boton_cerrarS = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(875, 555));

        BG.setBackground(new java.awt.Color(252, 240, 198));
        BG.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BG.setMinimumSize(new java.awt.Dimension(860, 520));
        BG.setPreferredSize(new java.awt.Dimension(860, 520));
        BG.setRequestFocusEnabled(false);
        BG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boton_cancelar.setBackground(new java.awt.Color(51, 153, 0));
        boton_cancelar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_cancelar.setForeground(new java.awt.Color(255, 255, 255));
        boton_cancelar.setText("Cancelar");
        boton_cancelar.setToolTipText("");
        boton_cancelar.setAutoscrolls(true);
        boton_cancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cancelarActionPerformed(evt);
            }
        });
        BG.add(boton_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 130, 30));

        boton_volver.setBackground(new java.awt.Color(51, 153, 0));
        boton_volver.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_volver.setForeground(new java.awt.Color(255, 255, 255));
        boton_volver.setText("Volver");
        boton_volver.setToolTipText("");
        boton_volver.setAutoscrolls(true);
        boton_volver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_volverActionPerformed(evt);
            }
        });
        BG.add(boton_volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 130, 30));

        TITULO.setBackground(new java.awt.Color(0, 0, 0));

        boton_myCuenta.setBackground(new java.awt.Color(0, 0, 0));
        boton_myCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/accBla.png"))); // NOI18N
        boton_myCuenta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_myCuenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton_myCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_myCuentaActionPerformed(evt);
            }
        });

        titulo.setBackground(new java.awt.Color(0, 0, 0));
        titulo.setFont(new java.awt.Font("Times New Roman", 1, 60)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Reservas - Activas");
        titulo.setToolTipText("");

        javax.swing.GroupLayout TITULOLayout = new javax.swing.GroupLayout(TITULO);
        TITULO.setLayout(TITULOLayout);
        TITULOLayout.setHorizontalGroup(
            TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TITULOLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boton_myCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TITULOLayout.setVerticalGroup(
            TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TITULOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_myCuenta)
                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        BG.add(TITULO, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 640, 100));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inicio", "Fin", "Horas", "Cantidad"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        BG.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 445, 330));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/rooms.jpg"))); // NOI18N
        BG.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 640, 420));

        boton_product.setBackground(new java.awt.Color(51, 153, 0));
        boton_product.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_product.setForeground(new java.awt.Color(255, 255, 255));
        boton_product.setText("Productos");
        boton_product.setToolTipText("");
        boton_product.setAutoscrolls(true);
        boton_product.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_productActionPerformed(evt);
            }
        });
        BG.add(boton_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 130, 30));

        boton_salas.setBackground(new java.awt.Color(51, 153, 0));
        boton_salas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_salas.setForeground(new java.awt.Color(255, 255, 255));
        boton_salas.setText("Salas");
        boton_salas.setToolTipText("");
        boton_salas.setAutoscrolls(true);
        boton_salas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_salas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_salasActionPerformed(evt);
            }
        });
        BG.add(boton_salas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 130, 30));

        boton_FaQ.setBackground(new java.awt.Color(0, 153, 0));
        boton_FaQ.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_FaQ.setForeground(new java.awt.Color(255, 255, 255));
        boton_FaQ.setText("FaQ");
        boton_FaQ.setToolTipText("");
        boton_FaQ.setAutoscrolls(true);
        boton_FaQ.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_FaQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_FaQActionPerformed(evt);
            }
        });
        BG.add(boton_FaQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 130, 30));

        boton_booking.setBackground(new java.awt.Color(43, 101, 153));
        boton_booking.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_booking.setForeground(new java.awt.Color(255, 255, 255));
        boton_booking.setText("Reservas");
        boton_booking.setToolTipText("");
        boton_booking.setAutoscrolls(true);
        boton_booking.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_booking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_bookingActionPerformed(evt);
            }
        });
        BG.add(boton_booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 130, 30));

        boton_concepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N
        boton_concepto.setBorder(null);
        boton_concepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_conceptoActionPerformed(evt);
            }
        });
        BG.add(boton_concepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        boton_events1.setBackground(new java.awt.Color(51, 153, 0));
        boton_events1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_events1.setForeground(new java.awt.Color(255, 255, 255));
        boton_events1.setText("Eventos");
        boton_events1.setToolTipText("");
        boton_events1.setAutoscrolls(true);
        boton_events1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_events1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_events1ActionPerformed(evt);
            }
        });
        BG.add(boton_events1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 130, 30));

        boton_cerrarS.setBackground(new java.awt.Color(51, 153, 0));
        boton_cerrarS.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_cerrarS.setForeground(new java.awt.Color(255, 255, 255));
        boton_cerrarS.setText("Cerrar sesion");
        boton_cerrarS.setToolTipText("");
        boton_cerrarS.setAutoscrolls(true);
        boton_cerrarS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_cerrarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cerrarSActionPerformed(evt);
            }
        });
        BG.add(boton_cerrarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_volverActionPerformed
       FMR_BOOKING newFrame = new FMR_BOOKING(account); 
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_volverActionPerformed

    private void boton_myCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_myCuentaActionPerformed
        FMR_MYACC newFrame = new FMR_MYACC(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_myCuentaActionPerformed

    private void boton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cancelarActionPerformed
        int selectedRow = jTable2.getSelectedRow();
        
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, 
                "Por favor, seleccione una reserva para cancelar", 
                "Error", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            // Get the booking ID from the selected row
            String bookingId = jTable2.getValueAt(selectedRow, 0).toString();
            
            // Confirm cancellation
            int confirm = JOptionPane.showConfirmDialog(
                this, 
                "¿Está seguro que desea cancelar la reserva #" + bookingId + "?", 
                "Confirmar Cancelación", 
                JOptionPane.YES_NO_OPTION);
            
            if (confirm == JOptionPane.YES_OPTION) {
                // Get the booking first
                Booking booking = bookingController.getBookingById(bookingId);
                
                if (booking != null) {
                    // Check if the booking belongs to the current user
                    if (!booking.getAccountId().equals(account.getId())) {
                        JOptionPane.showMessageDialog(this,
                            "No tienes permiso para cancelar esta reserva",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    // Cancel the booking
                    bookingController.cancelBooking(bookingId);
                    
                    JOptionPane.showMessageDialog(this, 
                        "Reserva cancelada exitosamente", 
                        "Éxito", 
                        JOptionPane.INFORMATION_MESSAGE);
                    
                    // Refresh the table
                    loadBookingsToTable();
                } else {
                    JOptionPane.showMessageDialog(this,
                        "No se encontró la reserva",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error al cancelar reserva: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_boton_cancelarActionPerformed

    private void boton_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_productActionPerformed
        FMR_PRODUCT newFrame = new FMR_PRODUCT(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_productActionPerformed

    private void boton_salasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_salasActionPerformed
        FMR_ROOMS newFrame = new FMR_ROOMS(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_salasActionPerformed

    private void boton_FaQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_FaQActionPerformed
        FMR_FaQ newFrame = new FMR_FaQ(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_FaQActionPerformed

    private void boton_bookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_bookingActionPerformed
        FMR_BOOKING newFrame = new FMR_BOOKING(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_bookingActionPerformed

    private void boton_conceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_conceptoActionPerformed
        FMR_CONCEPTO newFrame = new FMR_CONCEPTO(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_conceptoActionPerformed

    private void boton_events1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_events1ActionPerformed
        FMR_B_Crear newFrame = new FMR_B_Crear(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_events1ActionPerformed

    private void boton_cerrarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cerrarSActionPerformed
        FMR_LOGIN newFrame = new FMR_LOGIN();
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_cerrarSActionPerformed

    private void loadBookingsToTable() {
        try {
            DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]{"Sala", "Fecha Inicio", "Fecha Fin", "Horas", "Total"}) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            // Set the model and clear rows
            jTable2.setModel(model);
            model.setRowCount(0);
            
            // Make table transparent
            jTable2.setOpaque(true);
            jTable2.setBackground(Color.WHITE);
            jTable2.setSelectionBackground(new Color(255, 255, 255, 80));
            jTable2.setSelectionForeground(Color.RED);
            
            // Make scroll pane transparent
            jScrollPane2.setOpaque(false);
            jScrollPane2.setBackground(Color.WHITE);
            jScrollPane2.getViewport().setBackground(Color.WHITE);
            jScrollPane2.setBorder(null);
            
            // Configure header
            JTableHeader header = jTable2.getTableHeader();
            header.setOpaque(false);
            header.setBackground(new Color(0,0,0,80));
            header.setForeground(Color.black);
            ((DefaultTableCellRenderer)header.getDefaultRenderer()).setOpaque(false);
    
            // Load bookings
            List<Booking> allBookings = bookingController.getBookingsByUser(account.getId());
            LocalDateTime now = LocalDateTime.now();
            
            List<Booking> activeBookings = allBookings.stream()
                .filter(booking -> booking.getFechaFin().isAfter(now))
                .toList();
            
            if (activeBookings.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                    "No tienes reservas activas",
                    "Información",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Fill table with active bookings only
            for (Booking booking : activeBookings) {
                model.addRow(new Object[]{
                    getRoomName(booking.getRoomId()),
                    booking.getFechaInicio().format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")),
                    booking.getFechaFin().format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")),
                    booking.getHoras(),
                    String.format("$%.2f", booking.getTotal())
                });
            }

            // Adjust column widths
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(120); // Sala
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(140); // Inicio
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(140); // Fin
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(60);  // Horas
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(80);  // Total
            jTable2.setRowHeight(25);
    
            // Custom renderer for transparent cells
            DefaultTableCellRenderer customRenderer = new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(
                    JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    
                    // Fondo transparente por defecto
                    c.setBackground(new Color(255, 255, 255, 80)); // Fondo semi-transparente
                    c.setForeground(Color.BLACK);
                    setFont(getFont().deriveFont(Font.PLAIN));
            
                    // Solo aplicar estilo si la fila está ACTIVAMENTE seleccionada
                    if (table.getSelectedRow() == row) {
                        //c.setBackground(Color.WHITE); // Fondo blanco sólido
                        c.setForeground(Color.RED);   // Texto rojo
                        setFont(getFont().deriveFont(Font.BOLD));
                    }
                    return c;
                }
            };
            
            // Apply renderer to all columns
            for (int i = 0; i < jTable2.getColumnCount(); i++) {
                jTable2.getColumnModel().getColumn(i).setCellRenderer(customRenderer);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al cargar reservas: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    // Helper method to get room name
    private String getRoomName(String roomId) {
        try {
            Room room = roomController.getRoomById(roomId);
            if (room != null) {
                return room.getNombre() + " (" + getTipoHabitacion(room.getTipo()) + ")";
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "Sala " + roomId;
    }

    // Método auxiliar para convertir tipo de habitación (char) a descripción
    private String getTipoHabitacion(char tipo) {
        switch(tipo) {
            case 'I': return "Individual";
            case 'P': return "Privada";
            case 'D': return "Dormitorio";
            case 'M': return "Mixta";
            default: return "Desconocido";
        }
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMR_B_MisR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FMR_B_MisR(null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG;
    private javax.swing.JPanel TITULO;
    private javax.swing.JToggleButton boton_FaQ;
    private javax.swing.JToggleButton boton_booking;
    private javax.swing.JToggleButton boton_cancelar;
    private javax.swing.JToggleButton boton_cerrarS;
    private javax.swing.JButton boton_concepto;
    private javax.swing.JToggleButton boton_events1;
    private javax.swing.JButton boton_myCuenta;
    private javax.swing.JToggleButton boton_product;
    private javax.swing.JToggleButton boton_salas;
    private javax.swing.JToggleButton boton_volver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}