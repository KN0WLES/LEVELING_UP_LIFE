package view.gui;

import controller.*;
import exceptions.*;
import model.Event;
import model.*;
import interfaces.*;

import javax.swing.*;
import java.awt.*;
import java.util.List;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;

/**
 *
 * @author JHAIR BY KNOWLES
 */
public class FMR_EventosReservas extends javax.swing.JFrame {
   private final Account account;
   private final EventController eventController;
    /**
     * Creates new form FMR_EventosReservas
     */
    public FMR_EventosReservas(Account account) {
        EventController tempController;
        try {
            IFile<Event> fileHandler = new FileHandler<>(new Event());
            tempController = new EventController(fileHandler);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, 
                "Error al inicializar: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            tempController = null;
            System.exit(1);
        }
        
        this.eventController = tempController;
        this.account = account;
        initComponents();
        configureTable();
        setLocationRelativeTo(null);
        loadReservaEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Boton_VolverReserva = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        EventoAct_jTableEventoActivos = new javax.swing.JTable();
        TITULO1 = new javax.swing.JPanel();
        boton_myCuenta1 = new javax.swing.JButton();
        titulo1 = new javax.swing.JLabel();
        Registrarse = new javax.swing.JToggleButton();
        boton_events = new javax.swing.JToggleButton();
        boton_product = new javax.swing.JToggleButton();
        boton_salas = new javax.swing.JToggleButton();
        boton_FaQ = new javax.swing.JToggleButton();
        boton_booking = new javax.swing.JToggleButton();
        boton_concepto = new javax.swing.JButton();
        boton_logout1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BG1.setBackground(new java.awt.Color(252, 240, 198));
        BG1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BG1.setMinimumSize(new java.awt.Dimension(860, 520));
        BG1.setPreferredSize(new java.awt.Dimension(860, 520));
        BG1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        Boton_VolverReserva.setBackground(new java.awt.Color(51, 153, 0));
        Boton_VolverReserva.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Boton_VolverReserva.setForeground(new java.awt.Color(255, 255, 255));
        Boton_VolverReserva.setText("Volver");
        Boton_VolverReserva.setToolTipText("");
        Boton_VolverReserva.setAutoscrolls(true);
        Boton_VolverReserva.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Boton_VolverReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_VolverReservaActionPerformed(evt);
            }
        });

        EventoAct_jTableEventoActivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Inicio", "Fin", "Tipo", "Capacidad", "Costo"
            }
        ));
        jScrollPane1.setViewportView(EventoAct_jTableEventoActivos);

        TITULO1.setBackground(new java.awt.Color(0, 0, 0));

        boton_myCuenta1.setBackground(new java.awt.Color(0, 0, 0));
        boton_myCuenta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/accBla.png"))); // NOI18N
        boton_myCuenta1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_myCuenta1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton_myCuenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_myCuenta1ActionPerformed(evt);
            }
        });

        titulo1.setBackground(new java.awt.Color(0, 0, 0));
        titulo1.setFont(new java.awt.Font("Times New Roman", 1, 60)); // NOI18N
        titulo1.setForeground(new java.awt.Color(255, 255, 255));
        titulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo1.setText("Reservas - Eventos");
        titulo1.setToolTipText("");

        javax.swing.GroupLayout TITULO1Layout = new javax.swing.GroupLayout(TITULO1);
        TITULO1.setLayout(TITULO1Layout);
        TITULO1Layout.setHorizontalGroup(
            TITULO1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TITULO1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(titulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boton_myCuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        TITULO1Layout.setVerticalGroup(
            TITULO1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TITULO1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(TITULO1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TITULO1Layout.createSequentialGroup()
                        .addComponent(boton_myCuenta1)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );

        Registrarse.setBackground(new java.awt.Color(51, 153, 0));
        Registrarse.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Registrarse.setForeground(new java.awt.Color(255, 255, 255));
        Registrarse.setText("Registrarse");
        Registrarse.setToolTipText("");
        Registrarse.setAutoscrolls(true);
        Registrarse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Registrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(Registrarse, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Boton_VolverReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TITULO1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(TITULO1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Boton_VolverReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Registrarse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        BG1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 640, 560));

        boton_events.setBackground(new java.awt.Color(51, 153, 0));
        boton_events.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_events.setForeground(new java.awt.Color(255, 255, 255));
        boton_events.setText("Eventos");
        boton_events.setToolTipText("");
        boton_events.setAutoscrolls(true);
        boton_events.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_events.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_eventsActionPerformed(evt);
            }
        });
        BG1.add(boton_events, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 130, 30));

        boton_product.setBackground(new java.awt.Color(51, 153, 0));
        boton_product.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_product.setForeground(new java.awt.Color(255, 255, 255));
        boton_product.setText("Productos");
        boton_product.setToolTipText("");
        boton_product.setAutoscrolls(true);
        boton_product.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_productActionPerformed(evt);
            }
        });
        BG1.add(boton_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 130, 30));

        boton_salas.setBackground(new java.awt.Color(51, 153, 0));
        boton_salas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_salas.setForeground(new java.awt.Color(255, 255, 255));
        boton_salas.setText("Salas");
        boton_salas.setToolTipText("");
        boton_salas.setAutoscrolls(true);
        boton_salas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_salas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_salasActionPerformed(evt);
            }
        });
        BG1.add(boton_salas, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 130, 30));

        boton_FaQ.setBackground(new java.awt.Color(51, 153, 0));
        boton_FaQ.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_FaQ.setForeground(new java.awt.Color(255, 255, 255));
        boton_FaQ.setText("FaQ");
        boton_FaQ.setToolTipText("");
        boton_FaQ.setAutoscrolls(true);
        boton_FaQ.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_FaQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_FaQActionPerformed(evt);
            }
        });
        BG1.add(boton_FaQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 130, 30));

        boton_booking.setBackground(new java.awt.Color(43, 101, 153));
        boton_booking.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_booking.setForeground(new java.awt.Color(255, 255, 255));
        boton_booking.setText("Reservas");
        boton_booking.setToolTipText("");
        boton_booking.setAutoscrolls(true);
        boton_booking.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_booking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_bookingActionPerformed(evt);
            }
        });
        BG1.add(boton_booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 130, 30));

        boton_concepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N
        boton_concepto.setBorder(null);
        boton_concepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_conceptoActionPerformed(evt);
            }
        });
        BG1.add(boton_concepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        boton_logout1.setBackground(new java.awt.Color(51, 153, 0));
        boton_logout1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        boton_logout1.setForeground(new java.awt.Color(255, 255, 255));
        boton_logout1.setText("Cerrar sesion");
        boton_logout1.setToolTipText("");
        boton_logout1.setAutoscrolls(true);
        boton_logout1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boton_logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_logout1ActionPerformed(evt);
            }
        });
        BG1.add(boton_logout1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_VolverReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_VolverReservaActionPerformed
        FMR_BOOKING newFrame = new FMR_BOOKING(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Boton_VolverReservaActionPerformed

    private void boton_myCuenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_myCuenta1ActionPerformed
        FMR_MYACC newFrame = new FMR_MYACC(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_myCuenta1ActionPerformed

    private void boton_eventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_eventsActionPerformed
        FMR_EVENT newFrame = new FMR_EVENT(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_eventsActionPerformed

    private void boton_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_productActionPerformed
        FMR_PRODUCT newFrame = new FMR_PRODUCT(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_productActionPerformed

    private void boton_salasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_salasActionPerformed
        FMR_ROOMS newFrame = new FMR_ROOMS(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_salasActionPerformed

    private void boton_FaQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_FaQActionPerformed
        FMR_FaQ newFrame = new FMR_FaQ(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_FaQActionPerformed

    private void boton_bookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_bookingActionPerformed
        FMR_BOOKING newFrame = new FMR_BOOKING(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_bookingActionPerformed

    private void boton_conceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_conceptoActionPerformed
        FMR_CONCEPTO newFrame = new FMR_CONCEPTO(account);
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_conceptoActionPerformed

    private void boton_logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_logout1ActionPerformed
        FMR_LOGIN newFrame = new FMR_LOGIN();
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_boton_logout1ActionPerformed

    private void RegistrarseActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = EventoAct_jTableEventoActivos.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this,
                "Por favor, seleccione un evento para registrarse",
                "Error",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Get event name from selected row
            String eventName = EventoAct_jTableEventoActivos.getValueAt(selectedRow, 0).toString();
            Event selectedEvent = null;
            
            // Find the event by name
            List<Event> events = eventController.listarEventosActivos();
            for (Event event : events) {
                if (event.getNombre().equals(eventName)) {
                    selectedEvent = event;
                    break;
                }
            }
            
            if (selectedEvent == null) {
                throw new Exception("No se encontró el evento seleccionado");
            }

            // Check if event is full
            if (selectedEvent.getParticipantes().size() >= selectedEvent.getCapacidad()) {
                JOptionPane.showMessageDialog(this,
                    "Lo sentimos, este evento está lleno",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Confirm registration
            int confirm = JOptionPane.showConfirmDialog(
                this,
                "¿Desea registrarse para el evento '" + selectedEvent.getNombre() + "'?\n" +
                "Fecha: " + selectedEvent.getFechaInicio().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")) + "\n" +
                "Costo: $" + selectedEvent.getPrecio(),
                "Confirmar Registro",
                JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Register for the event using the event's ID
                boolean registered = eventController.agregarParticipante(selectedEvent.getId(), account.getId());
                
                if (registered) {
                    JOptionPane.showMessageDialog(this,
                        "¡Registro exitoso!\n" +
                        "Evento: " + selectedEvent.getNombre() + "\n" +
                        "Fecha: " + selectedEvent.getFechaInicio().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")),
                        "Éxito",
                        JOptionPane.INFORMATION_MESSAGE);

                    // Refresh the table
                    loadReservaEvent();
                    EventoAct_jTableEventoActivos.clearSelection();
                } else {
                    JOptionPane.showMessageDialog(this,
                        "No se pudo completar el registro",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al registrarse: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void loadReservaEvent() {
        try {
            List<Event> allEvents = eventController.listarEventosActivos();
            DefaultTableModel model = (DefaultTableModel) EventoAct_jTableEventoActivos.getModel();
            model.setRowCount(0); // Clear table
            
            // Obtener la fecha y hora actual
            LocalDateTime now = LocalDateTime.now();
            System.out.println("Fecha actual: " + now.format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")));
            
            // Filtrar solo eventos que no hayan finalizado (fecha fin después de ahora)
            List<Event> filteredEvents = new ArrayList<>();
            for (Event event : allEvents) {
                System.out.println("Evento: " + event.getNombre() + 
                                   ", Fecha fin: " + event.getFechaFin().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")) + 
                                   ", ¿Es después de ahora? " + event.getFechaFin().isAfter(now));
                
                if (event.getFechaFin().isAfter(now)) {
                    filteredEvents.add(event);
                }
            }
            
            if (filteredEvents.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                    "No hay eventos activos disponibles",
                    "Información",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            for (Event event : filteredEvents) {
                // Verificar si el usuario ya está registrado en este evento
                boolean isRegistered = event.getParticipantes().contains(account.getId());
                String status = isRegistered ? "Registrado" : 
                               (event.getParticipantes().size() >= event.getCapacidad() ? "Lleno" : "Disponible");
                
                model.addRow(new Object[]{
                    event.getNombre(),
                    event.getFechaInicio().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")),
                    event.getFechaFin().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")),
                    getTipoEvento(event.getTipo()),
                    event.getParticipantes().size() + "/" + event.getCapacidad(),
                    String.format("$%.2f", event.getPrecio())
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al cargar eventos: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private String getTipoEvento(char tipo) {
        switch (tipo) {
            case 'C': return "Conferencia";
            case 'T': return "Taller";
            case 'F': return "Fiesta";
            default: return "Desconocido";
        }
    }

    private void configureTable() {
        // Keep the original column structure from the form designer
        DefaultTableModel model = new DefaultTableModel(
            new Object[][] {},
            new String[] {"Nombre", "Inicio", "Fin", "Tipo", "Capacidad", "Costo"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        EventoAct_jTableEventoActivos.setModel(model);
        EventoAct_jTableEventoActivos.setBackground(Color.WHITE);
        EventoAct_jTableEventoActivos.setForeground(Color.BLACK);
        EventoAct_jTableEventoActivos.setSelectionBackground(new Color(51, 153, 255));
        EventoAct_jTableEventoActivos.setSelectionForeground(Color.WHITE);
        EventoAct_jTableEventoActivos.setRowHeight(25);
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMR_EventosReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMR_EventosReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMR_EventosReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMR_EventosReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FMR_EventosReservas(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG1;
    private javax.swing.JToggleButton Boton_VolverReserva;
    private javax.swing.JTable EventoAct_jTableEventoActivos;
    private javax.swing.JToggleButton Registrarse;
    private javax.swing.JPanel TITULO1;
    private javax.swing.JToggleButton boton_FaQ;
    private javax.swing.JToggleButton boton_booking;
    private javax.swing.JButton boton_concepto;
    private javax.swing.JToggleButton boton_events;
    private javax.swing.JToggleButton boton_logout1;
    private javax.swing.JButton boton_myCuenta1;
    private javax.swing.JToggleButton boton_product;
    private javax.swing.JToggleButton boton_salas;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titulo1;
    // End of variables declaration//GEN-END:variables
}
